import java.util.Scanner;
public class MyProgram
{
    
private static String [] [] board;
static Scanner keyboard = new Scanner(System.in);
private static int winner;
private static boolean game;

public MyProgram()
{
    board = new String [6][7];
}


public static void fillBoard ()
{
    for (int i = 0; i < board.length; i++)
    {
    for (int j = 0; j < board[0].length; j++)
    {
        board[i][j] = "_";
        System.out.print(board[i][j]+"  ");
    }
    System.out.println();
    }
}

public static void showBoard ()
{
    System.out.println();
    System.out.println("1  2  3  4  5  6  7");
    for (int i = 0; i < board.length; i++)
    {
    for (int j = 0; j < board[0].length; j++)
    {
        System.out.print(board[i][j]+"  ");
    }
    System.out.println();
    }
}


public static void p1move ()
{
    int move1 = 0;
    while (move1 < 1 || move1 > 7)
    {
    System.out.println("Player 1:");
    move1 = keyboard.nextInt();
    if (move1 < 1 || move1 > 7)
    System.out.println("Not an acceptable move.");
    System.out.println();
    }
    
    int y = 1;
    while (y < board.length+1)
    {
    int tracker = 0;
    if (board[board.length-y][move1-1] == "_")
    {
    board[board.length-y][move1-1] = "x";
    tracker = 1;
    }
    
    if (tracker == 1)
    y = 100;
    
    y++;
    }
    
}

public static void p2move ()
{
    int move2 = 0;
    while (move2 < 1 || move2 > 7)
    {
    System.out.println("Player 2:");
    move2 = keyboard.nextInt();
    if (move2 < 1 || move2 > 7)
    System.out.println("Not an acceptable move.");
    System.out.println();
    }
    
    int y = 1;
    while (y < board.length+1)
    {
    int tracker = 0;
    if (board[board.length-y][move2-1] == "_")
    {
    board[board.length-y][move2-1] = "o";
    tracker = 1;
    }
    
    if (tracker == 1)
    y = 100;
    
    y++;
    }
}

public static boolean winHorizontal ()
{
    for (int i = 0; i < board.length; i++)
    {
    for (int j = 0; j < board[0].length-3; j++)
    {
    if (board[i][j].equals("x"))
    if (board[i][j].equals(board[i][j+1]))
        if (board[i][j].equals(board[i][j+2]))
            if (board[i][j].equals(board[i][j+3])){
            winner = 1;
            return true;}
            
    if (board[i][j].equals("o"))
    if (board[i][j].equals(board[i][j+1]))
        if (board[i][j].equals(board[i][j+2]))
            if (board[i][j].equals(board[i][j+3])){
            winner = 2;
            return true;}
    }
    }
    
    return false;
}

public static boolean winVertical ()
{
    for (int i = 0; i < board.length-3; i++)
    {
    for (int j = 0; j < board[0].length; j++)
    {
    if (board[i][j].equals("x"))
    if (board[i][j].equals(board[i+1][j]))
        if (board[i][j].equals(board[i+2][j]))
            if (board[i][j].equals(board[i+3][j])){
            winner = 1;
            return true;}
            
    if (board[i][j].equals("o"))
    if (board[i][j].equals(board[i+1][j]))
        if (board[i][j].equals(board[i+2][j]))
            if (board[i][j].equals(board[i+3][j])){
            winner = 2;
            return true;}
    }
    }
    
    return false;
}

public static boolean winDiagonalRight ()
{
    for (int i = 0; i < board.length-3; i++)
    {
    for (int j = 0; j < board[0].length-3; j++)
    {
    if (board[i][j].equals("x"))
    if (board[i][j].equals(board[i+1][j+1]))
        if (board[i][j].equals(board[i+2][j+2]))
            if (board[i][j].equals(board[i+3][j+3])){
            winner = 1;
            return true;}
            
    if (board[i][j].equals("o"))
    if (board[i][j].equals(board[i+1][j+1]))
        if (board[i][j].equals(board[i+2][j+2]))
            if (board[i][j].equals(board[i+3][j+3])){
            winner = 2;
            return true;}
    }
    }
    
    return false;
}

public static boolean winDiagonalLeft ()
{
    for (int i = 0; i < board.length-3; i++)
    {
    for (int j = 3; j < board[0].length; j++)
    {
    if (board[i][j].equals("x"))
    if (board[i][j].equals(board[i+1][j-1]))
        if (board[i][j].equals(board[i+2][j-2]))
            if (board[i][j].equals(board[i+3][j-3])){
            winner = 1;
            return true;}
            
    if (board[i][j].equals("o"))
    if (board[i][j].equals(board[i+1][j-1]))
        if (board[i][j].equals(board[i+2][j-2]))
            if (board[i][j].equals(board[i+3][j-3])){
            winner = 2;
            return true;}
    }
    }
    
    return false;
}

public static void allWins ()
{
    game = false;
    
    if (winHorizontal())
    game = true;
    if (winVertical())
    game = true;
    if (winDiagonalRight())
    game = true;
    if (winDiagonalLeft())
    game = true;
}

public void connect4 ()
{
    System.out.println("Welcome to Connect 4! This is a two-player game.");
System.out.println("Here is the board.");
System.out.println("When your turn is prompted, type the number of the column where you will place your disk.");
System.out.println();
System.out.println("1  2  3  4  5  6  7");
fillBoard();
System.out.println();

while (game==false)
{
p1move();
showBoard();
System.out.println();
allWins();
if (game==true)
break;
p2move();
showBoard();
System.out.println();
allWins();
if (game==true)
break;

int count = 0;
    for (int i = 0; i < board.length; i++)
    {
    for (int j = 0; j < board[0].length; j++)
    {
    if (board[i][j]=="_")
    count++;
    }
    }
if (count==0){
winner = 0;
break;}

}

if (winner == 0)
System.out.println("The game was a draw.");
else
System.out.println("Player " + winner + " won!!!");
}


    public static void main(String[] args)
    {
        
MyProgram obj = new MyProgram ();

obj.connect4();
        
    }
}
